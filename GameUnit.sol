
/**
 * This file was generated by TONDev.
 * TONDev is a part of TON OS (see http://ton.dev).
 */
pragma ton-solidity >= 0.35.0;
pragma AbiHeader expire;
import 'GameOb.sol';

// This is class that describes you smart contract.
abstract contract  GameUnit is GameOb {

    address public msgAddress;
    uint public health = 10;
    uint static public unitNum;
    uint public impactforce = 6;
    uint public protection = 2;
   
    constructor() public {
        tvm.accept();
    }

    //принять атаку
    function addAtaca(uint value) public override{
        tvm.accept();
        msgAddress = msg.sender;
        uint atac = value - protection;
        if(health > atac){
        health = health - atac;
        } else {
            health = 0;
        }
        if(health == 0){
            sendValue(msgAddress);
        }
        
    }
    //обработка смерти
    function sendValue(address dest) public {
        tvm.accept();
        dest.transfer(0, true, 160);
         
    }  
    //атака противника
    function atacaGameOb(GameOb adresUnit) public  {
        tvm.accept();
        adresUnit.addAtaca(impactforce);
    } 
    //получить текущее здоровье
    function getHealth() public returns(uint h){
        tvm.accept();
        h = health;
        return h;
    }

    //- получить силу атаки
    function atacLevel(uint volue)  public virtual;

    //- получить силу защиты
    function plusprotection(uint voluepr) public virtual;
}
